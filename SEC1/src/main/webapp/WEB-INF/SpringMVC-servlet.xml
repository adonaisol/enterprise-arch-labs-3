<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<mvc:annotation-driven />
	<context:annotation-config />
	<context:component-scan base-package="cs544"  />

	<bean id="carDao" class="cs544.sec1.CarDao" />
	<bean id="bookDao" class="cs544.sec2.BookDao" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- Lets us find resources (.html etc) through the default servlet -->
	<mvc:default-servlet-handler/> 
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />
	<!--<sec:http pattern="/logout" security="none" />-->
	<sec:http use-expressions="true">
		<sec:intercept-url pattern="/login" access="isAnonymous()" />
		<sec:intercept-url pattern="/logout" access="permitAll()" />

		<sec:intercept-url pattern="/" access="hasRole('ROLE_USER')" />
		<sec:intercept-url pattern="/cars" access="hasRole('ROLE_USER')" />
		<sec:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />
		<sec:form-login />
		<sec:logout invalidate-session="true"/>
		<!--<sec:logout logout-success-url="/login" />-->
		<!--<sec:form-login login-page="/login" authentication-failure-url="/login" default-target-url="/"/>-->
		<!--<sec:logout logout-success-url="/login"/>-->

	</sec:http>

	<sec:authentication-manager>
		<sec:authentication-provider>
			<!--<sec:password-encoder hash="bcrypt" />-->
			<sec:user-service>
				<sec:user name="user" password="pass" authorities="ROLE_USER"/>
				<sec:user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_USER" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>